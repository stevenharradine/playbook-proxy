global
  daemon
  maxconn 20000
  pidfile /var/run/haproxy/haproxy.pid
  stats socket /var/run/haproxy/stats.sock mode 600
  log /dev/log local0
  log /dev/log local1 notice
  chroot /var/lib/haproxy
  user haproxy
  group haproxy
  ssl-default-bind-ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH+aRSA+RC4:!RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS
  ssl-default-server-ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH+aRSA+RC4:!RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS
### START FRAGMENT ###
defaults
  log global              # Defer to global section for logging configuration.
  mode http               # The instance will work in HTTP mode (vs TCP).
  option httplog          # Enable logging of HTTP request, session state and timers.
  option dontlognull      # Disable logging of null connections.
  maxconn 19500           # Limits the sockets to this number of concurrent connections.
  timeout client 60s      # Set the maximum inactivity time on the client side.
  timeout server 60s      # Set the maximum inactivity time on the server side.
  timeout queue  60s      # Set the maximum time to wait in the queue for a connection slot to be free.
  timeout connect 4s      # Set the maximum time to wait for a connection attempt to a server to succeed.
  option httpclose        # Enable passive HTTP connection closing.
  option abortonclose     # Enable early dropping of aborted requests pending in queues.
  balance roundrobin      # Define the load balancing algorithm to be used in a backend.
  option forwardfor       # Enable insertion of the X-Forwarded-For header to requests sent to servers
  retries 2               # Set the number of retries to perform on a server after a connection failure
### START FRAGMENT ###
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http
### START FRAGMENT ###

frontend https
  bind *:443 ssl crt /data/www/ssl.combined no-sslv3

  acl url_starts_with_sarah_deprecated path_beg /media /icons /phpvirtualbox
  acl url_starts_with_sarah path_beg /SARAH
  acl url_starts_with_owncloud path_beg /owncloud
  acl url_starts_with_zm path_beg /zm /cgi-bin /javascript
  acl url_starts_with_transmission path_beg /transmission
  acl url_starts_with_main_xbmc path_beg 192.168.1.12

  use_backend SARAH_DEP if url_starts_with_sarah_deprecated
  use_backend SARAH if url_starts_with_sarah
  use_backend OWNCLOUD if url_starts_with_owncloud
  use_backend ZM if url_starts_with_zm
  use_backend TRANSMISSION if url_starts_with_transmission
  use_backend MAIN_XBMC if url_starts_with_main_xbmc

  default_backend SARAH

frontend http
  bind *:80
  redirect scheme https code 301 if !{ ssl_fc }

backend MAIN_XBMC
  server MAIN_XBMC 192.168.1.12:8080

backend SARAH_DEP
  rspadd Access-Control-Allow-Origin:\ *
  server SARAH_DEP 192.168.1.12:80

backend SARAH
  server SARAH 192.168.1.11:80

backend OWNCLOUD
  server OWNCLOUD 192.168.1.9:80

backend GIT
  server GIT 192.168.1.4:80

backend ZM
  server ZM 192.168.1.5:80

backend TRANSMISSION
  server TRANSMISSION 192.168.1.14:8080
